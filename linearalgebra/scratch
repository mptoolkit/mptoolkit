


LinearAlgebra::AssignInterface<
        LinearAlgebra::MatrixSection
        <
           LinearAlgebra::MatrixRef<std::complex<double>, LinearAlgebra::RowMajor>&
         , LinearAlgebra::Range const, LinearAlgebra::Range const
        >&, 
        LinearAlgebra::MatrixSection
        <
           LinearAlgebra::MatrixRef<std::complex<double>, LinearAlgebra::RowMajor>&
         , LinearAlgebra::Range const, LinearAlgebra::IndirectVector<LinearAlgebra::VectorRef<int>&, LinearAlgebra::Range const> const
        >
       LinearAlgebra::Concepts::MatrixExpression<std::complex<double>, LinearAlgebra::Concepts::Local<LinearAlgebra::Concepts::DenseMatrix<LinearAlgebra::RowMajor, void> > >, LinearAlgebra::Concepts::MatrixExpression<std::complex<double>, LinearAlgebra::Concepts::Local<LinearAlgebra::Concepts::DenseMatrix<LinearAlgebra::RowMajor, void> > > 
>::operator()(
   LinearAlgebra::MatrixSection
   <
      LinearAlgebra::MatrixRef<std::complex<double>, LinearAlgebra::RowMajor>&
    , LinearAlgebra::Range const, LinearAlgebra::Range const
   >&
 , LinearAlgebra::MatrixSection
   <
      LinearAlgebra::MatrixRef<std::complex<double>, LinearAlgebra::RowMajor>&
    , LinearAlgebra::Range const, LinearAlgebra::IndirectVector<LinearAlgebra::VectorRef<int>&, LinearAlgebra::Range const> const
   > const&
) const <Zyklus 1> [2]




LinearAlgebra::AssignProduct2_StrideStrideStride
<
   LinearAlgebra::Matrix<std::complex<double>, LinearAlgebra::RowMajor>
 , LinearAlgebra::RowMajor
 , LinearAlgebra::MatrixMemProxy<double const, LinearAlgebra::RowMajor, LinearAlgebra::tagVariable, LinearAlgebra::tagVariable, LinearAlgebra::tagVariable, LinearAlgebra::tagVariable>
 , LinearAlgebra::RowMajor
 , LinearAlgebra::MatrixMemProxy<std::complex<double> const, LinearAlgebra::ColMajor, LinearAlgebra::tagVariable, LinearAlgebra::tagVariable, LinearAlgebra::tagVariable, LinearAlgebra::tagVariable>
 , LinearAlgebra::ColMajor
 , LinearAlgebra::Multiplication<double, std::complex<double>, 
                                LinearAlgebra::AnyScalar<double>, LinearAlgebra::AnyScalar<std::complex<double> >, void> 
>::apply(LinearAlgebra::Matrix<std::complex<double>, LinearAlgebra::RowMajor>&, LinearAlgebra::MatrixMemProxy<double const, LinearAlgebra::RowMajor, LinearAlgebra::tagVariable, LinearAlgebra::tagVariable, LinearAlgebra::tagVariable, LinearAlgebra::tagVariable> const&, LinearAlgebra::MatrixMemProxy<std::complex<double> const, LinearAlgebra::ColMajor, LinearAlgebra::tagVariable, LinearAlgebra::tagVariable, LinearAlgebra::tagVariable, LinearAlgebra::tagVariable> const&, LinearAlgebra::Multiplication<double, std::complex<double>, LinearAlgebra::AnyScalar<double>, LinearAlgebra::AnyScalar<std::complex<double> >, void>) [4]




LinearAlgebra::MatrixBinaryOuterIterator<LinearAlgebra::MatrixBinaryOuterIterator<LinearA
lgebra::MatrixPtrIterator<const
   std::complex<double>, LinearAlgebra::RowMajor>,
   LinearAlgebra::MatrixTransformOuterIterator<LinearAlgebra::MatrixPtrIterator<const
   std::complex<double>, LinearAlgebra::RowMajor>,
   LinearAlgebra::BinderSecond<LinearAlgebra::Multiplication<std::complex<double>,
   double, LinearAlgebra::AnyScalar<std::complex<double> >,
   LinearAlgebra::AnyScalar<double>, void> > >,
   LinearAlgebra::Addition<std::complex<double>, std::complex<double>,
   LinearAlgebra::AnyScalar<std::complex<double> >,
   LinearAlgebra::AnyScalar<std::complex<double> >, void>,
   LinearAlgebra::vector_iterator_dense, LinearAlgebra::vector_iterator_dense>,
   LinearAlgebra::MatrixTransformOuterIterator<LinearAlgebra::MatrixPtrIterator<const
   std::complex<double>, LinearAlgebra::RowMajor>,
   LinearAlgebra::UnaryComposer<LinearAlgebra::BinderSecond<LinearAlgebra::Multiplication<st
d::complex<double>,
   double, LinearAlgebra::AnyScalar<std::complex<double> >,
   LinearAlgebra::AnyScalar<double>, void> >,
   LinearAlgebra::BinderSecond<LinearAlgebra::Multiplication<std::complex<double>,
   double, LinearAlgebra::AnyScalar<std::complex<double> >,
   LinearAlgebra::AnyScalar<double>, void> >, void> >,
   LinearAlgebra::Addition<std::complex<double>, std::complex<double>,
   LinearAlgebra::AnyScalar<std::complex<double> >,
   LinearAlgebra::AnyScalar<std::complex<double> >, void>,
   LinearAlgebra::vector_iterator_dense, LinearAlgebra::vector_iterator_dense>
   ::iterate(

const
   LinearAlgebra::MatrixBinaryOuterIterator<LinearAlgebra::MatrixPtrIterator<const
   std::complex<double>, LinearAlgebra::RowMajor>,
   LinearAlgebra::MatrixTransformOuterIterator<LinearAlgebra::MatrixPtrIterator<const
   std::complex<double>, LinearAlgebra::RowMajor>,
   LinearAlgebra::BinderSecond<LinearAlgebra::Multiplication<std::complex<double>,
   double, LinearAlgebra::AnyScalar<std::complex<double> >,
   LinearAlgebra::AnyScalar<double>, void> > >,
   LinearAlgebra::Addition<std::complex<double>, std::complex<double>,
   LinearAlgebra::AnyScalar<std::complex<double> >,
   LinearAlgebra::AnyScalar<std::complex<double> >, void>,
   LinearAlgebra::vector_iterator_dense, LinearAlgebra::vector_iterator_dense>&
   ) const'






  LinearAlgebra::IndirectIterator<LinearAlgebra::VecPtrIterator<const double,
   mpl_::int_<1> >, LinearAlgebra::FunctorFromVector<std::vector<int,
   std::allocator<int> > > >::

IndirectIterator(
	   LinearAlgebra::VecPtrIterator<double, mpl_::int_<1> >, 
           int, 
	   const LinearAlgebra::FunctorFromVector<std::vector<int, std::allocator<int> > >&)'




  LinearAlgebra::IndirectIterator<BaseIter, Functor>::IndirectIterator(const
   BaseIter&, long int, const Functor&) [with BaseIter =
   LinearAlgebra::VecPtrIterator<const double, mpl_::int_<1> >, Functor =
   LinearAlgebra::FunctorFromVector<std::vector<int, std::allocator<int> > >]

